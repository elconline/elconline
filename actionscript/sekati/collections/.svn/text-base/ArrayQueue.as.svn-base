/** * sekati.collections.ArrayQueue * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.collections {	import sekati.collections.ArrayCollection;	import sekati.collections.IQueue;		/**	 * Array based Queue data structure.	 */	public class ArrayQueue extends ArrayCollection implements IQueue {		/**		 * ArrayQueue Constructor creates a new <code>ArrayQueue</code>.		 * You may have it wrap an existing <code>Array</code> or the 		 * constructor will create an empty <code>Array</code> for you.		 */		public function ArrayQueue(array : Array = null) {			if ( !array ) array = new Array( );			super( array );		}		/**		 * @inheritDoc		 */		public function get head() : Object {			return array[0];		}		/**		 * @inheritDoc		 */		public function enqueue(o : Object) : void {			array.push( o );		}		/**		 * @inheritDoc		 */		public function dequeue() : Object {			return array.shift( );		}	}}