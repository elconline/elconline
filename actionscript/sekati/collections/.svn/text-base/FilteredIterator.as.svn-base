/** * sekati.collections.FilteredIterator * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.collections {	import sekati.collections.IIterator;		/**	 * Filtered Iterator	 */	public class FilteredIterator implements IIterator {		protected var _iterator : IIterator;		protected var _filter : Function;		/**		 * FilteredIterator Constructor		 */		public function FilteredIterator(unfilteredCollection : IIterator, filterFunction : Function) {			_iterator = unfilteredCollection;			_filter = filterFunction;					}		/**		 * @inheritDoc		 */		public function hasNext() : Boolean {			return (peek( ) != null);		}		/**		 * @inheritDoc		 */		public function next() : Object {			if (!_iterator.hasNext( )) return null;			do {				var next : Object = _iterator.next( );			} while (next != null && _filter( next ) == false);						return next;		}		/**		 * @inheritDoc		 */				public function peek() : Object {			while (true) {				var peek : Object = _iterator.peek( );				if (peek == null) return null;				if (Boolean( _filter( peek ) )) {					return peek;				} else {					_iterator.next( );				}			}			return null;		}	}}