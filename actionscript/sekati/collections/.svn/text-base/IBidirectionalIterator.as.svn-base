/** * sekati.collections.IBidirectionalIterator * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.collections {	import sekati.collections.IIterator;	/**	 * IBidirectionalIterator defines how the non-destructive, pointer-based, bidrectional iterating of collections of items is handled.	 */	public interface IBidirectionalIterator extends IIterator {		/**		 * Is there a previous item in the collection to move to.		 */				function hasPrevious() : Boolean;			/**		 * Move to the previous item and return it.		 */		function previous() : Object;		/**		 * Returns the previous item in the collection without moving to it.		 */				function glimpse() : Object;		/**		 * Return the interative pointer index.		 */		function get pointer() : int;		/**		 * Return the collection length.		 */		function get length() : int;	}}