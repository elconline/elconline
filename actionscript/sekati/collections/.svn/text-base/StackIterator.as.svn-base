/** * sekati.collections.StackIterator * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.collections {	import sekati.collections.ArrayQueue;	import sekati.collections.IDestructiveIterator;	import sekati.collections.IIterator;	import sekati.collections.IStack;		/**	 * Stack based Iterator	 */	public class StackIterator implements IIterator, IDestructiveIterator {		private var _queue : ArrayQueue;		/**		 * StackIterator Constructor		 */		public function StackIterator(stack : IStack) {			_queue = new ArrayQueue( );			while ( !stack.isEmpty ) {				_queue.enqueue( stack.pop( ) );			}			var elements : Array = _queue.array.slice( 0 );			while ( elements.length ) {				stack.push( elements.pop( ) );						}		}		/**		 * @inheritDoc		 */		public function hasNext() : Boolean {			return !_queue.isEmpty;				}		/**		 * @inheritDoc		 */		public function next() : Object {			return _queue.dequeue( );		}		/**		 * @inheritDoc		 */		public function peek() : Object {			return _queue.head;		}	}}