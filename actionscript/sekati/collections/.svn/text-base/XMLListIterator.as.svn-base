/** * sekati.collections.XMLListIterator * @version 1.0.3 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.collections {	import sekati.collections.IIterator;	import sekati.collections.IPointerIterator;	/**	 * XMLList based Iterator	 */	public class XMLListIterator implements IIterator, IPointerIterator {		protected var _list : XMLList;		protected var _pointer : int;		/**		 * XMLListIterator Constructor		 */		public function XMLListIterator(sourceXMLList : XMLList) {			_list = sourceXMLList;			_pointer = 0;		}		/**		 * @inheritDoc		 */		public function hasNext() : Boolean {			return (_pointer < _list.length( ));		}		/**		 * @inheritDoc		 */		public function next() : Object {			return (_pointer < _list.length( )) ? _list[_pointer++] : null;		}		/**		 * @inheritDoc		 */		public function peek() : Object {			return (hasNext( )) ? _list[_pointer + 1] : null;		}		/**		 * The interative pointer index.		 */		public function get pointer() : int {			return _pointer;		}		/**		 * @private		 */		public function set pointer(i : int) : void {			_pointer = i;		}			}}