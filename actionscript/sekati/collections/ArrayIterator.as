/** * sekati.collections.ArrayIterator * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.collections {	import sekati.collections.IDestructiveIterator;	import sekati.collections.IIterator;		/**	 * Array based Iterator	 */	public class ArrayIterator implements IIterator, IDestructiveIterator {		protected var _array : Array;		/**		 * ArrayIterator Constructor		 * @param array	Array of data used in iteration.		 */		public function ArrayIterator(array : Array) {			_array = array.concat( );		}		/**		 * Check if iterator has a next element.		 * @return Boolean		 */		public function hasNext() : Boolean {			return (_array.length > 0);		}			/**		 * Remove and return the next item in the collection.		 */		public function next() : Object {			return (_array.shift( ));		}		/**		 * Return the next item, but don't remove it yet.		 */		public function peek() : Object {			return (_array.length > 0) ? _array[0] : null;		}		}}