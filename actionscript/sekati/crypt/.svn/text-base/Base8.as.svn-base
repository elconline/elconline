/** * sekati.crypt.Base8 * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */ package sekati.crypt {	import sekati.crypt.ICipher;	/**	 * Encodes and decodes a base8 (hex) string.	 * @see http://en.wikipedia.org/wiki/Octal	 */	final public class Base8 implements ICipher {		/**		 * Encodes a base8 string.		 * @param src (String) - string to encode		 * @return String 		 */		public static function encode(src : String) : String {			var result : String = new String( "" );			for (var i : int = 0; i < src.length ; i++) {				result += src.charCodeAt( i ).toString( 16 );			}			return result;		}		/**		 * Decodes a base8 string.		 * @param src (String) - string to decode		 * @return String 		 */		public static function decode(src : String) : String {			var result : String = new String( "" );			for (var i : int = 0; i < src.length ; i += 2) {				result += String.fromCharCode( parseInt( src.substr( i, 2 ), 16 ) );			}			return result;		}				/**		 * Base8 Static Constructor		 */		public function Base8() {			throw new Error( "Base8 is a static class and cannot be instantiated." );		}	}}