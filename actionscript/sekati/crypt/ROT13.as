/** * sekati.crypt.ROT13 * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.crypt {	import sekati.crypt.ICipher;	/**	 * Encodes and decodes a string using the ROT13 	 * algorithm (aka a simple Caesar cipher)	 * @see http://en.wikipedia.org/wiki/ROT13	 */	final public class ROT13 implements ICipher {		private static const ROT13_CHARS : String = "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMabcdefghijklmnopqrstuvwxyzabcdefghijklm";		/**		 * Encodes or decodes a ROT13 string.		 * @param src (String)		 * @return String		 */		public static function calculate(src : String) : String {			var calculated : String = new String( "" );			for (var i : Number = 0; i < src.length ; i++) {				var character : String = src.charAt( i );				var pos : Number = ROT13_CHARS.indexOf( character );				if (pos > -1) character = ROT13_CHARS.charAt( pos + 13 );				calculated += character;			}			return calculated;		}				/**		 * ROT13 Static Constructor		 */		public function ROT13() {			throw new Error( "ROT13 is a static class and cannot be instantiated." );		}		}}