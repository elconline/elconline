/** * sekati.data.HTMLCode * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.data {	import flash.utils.Dictionary;		/**	 * HTMLCode Lookup tables	 */	public class HTMLCode {		public static const entities : Dictionary = new Dictionary( );		entities["\""] = "&quot;";		entities["'"] = "&apos;";		entities["&"] = "&amp;";		entities["<"] = "&lt;";		entities[">"] = "&gt;";		entities[" "] = "&nbsp;";		entities["¡"] = "&iexcl;";		entities["Û"] = "&curren;";		entities["¢"] = "&cent;";		entities["£"] = "&pound;";		entities["´"] = "&yen;";		entities["¦"] = "&brvbar;";		entities["¤"] = "&sect;";		entities["¬"] = "&uml;";		entities["©"] = "&copy;";		entities["»"] = "&ordf;";		entities["«"] = "&laquo;";		entities["Â"] = "&not;";		entities["Ð"] = "&shy;";		entities["®"] = "&reg;";		entities["™"] = "&trade;";		entities["ø"] = "&macr;";		entities["¡"] = "&deg;";		entities["±"] = "&plusmn;";		entities["Ó"] = "&sup2;";		entities["Ò"] = "&sup3;";		entities["«"] = "&acute;";		entities["µ"] = "&micro;";		entities["¦"] = "&para;";		entities["á"] = "&middot;";		entities["ü"] = "&cedil;";		entities["Õ"] = "&sup1;";		entities["¼"] = "&ordm;";		entities["»"] = "&raquo;";		entities["¹"] = "&frac14;";		entities["¸"] = "&frac12;";		entities["²"] = "&frac34;";		entities["À"] = "&iquest;";		entities["×"] = "&times;";		entities["Ö"] = "&divide;";		entities["À"] = "&Agrave;";		entities["Á"] = "&Aacute;";		entities["Â"] = "&Acirc;";		entities["Ã"] = "&Atilde;";		entities["Ä"] = "&Auml;";		entities["Å"] = "&Aring;";		entities["Æ"] = "&AElig;";		entities["Ç"] = "&Ccedil;";		entities["È"] = "&Egrave;";		entities["É"] = "&Eacute;";		entities["Ê"] = "&Ecirc;";		entities["Ë"] = "&Euml;";		entities["Ì"] = "&Igrave;";		entities["Í"] = "&Iacute;";		entities["Î"] = "&Icirc;";		entities["Ï"] = "&Iuml;";		entities["Ð"] = "&ETH;";		entities["Ñ"] = "&Ntilde;";		entities["Ò"] = "&Ograve;";		entities["Ó"] = "&Oacute;";		entities["Ô"] = "&Ocirc;";		entities["Õ"] = "&Otilde;";		entities["Ö"] = "&Ouml;";		entities["Ø"] = "&Oslash;";		entities["ô"] = "&Ugrave;";		entities["ò"] = "&Uacute;";		entities["ó"] = "&Ucirc;";		entities["†"] = "&Uuml;";		entities["Þ"] = "&THORN;";		entities["§"] = "&szlig;";		entities["ˆ"] = "&agrave;";		entities["‡"] = "&aacute;";		entities["‰"] = "&acirc;";		entities["‹"] = "&atilde;";		entities["Š"] = "&auml;";		entities["Œ"] = "&aring;";		entities["¾"] = "&aelig;";		entities["Ž"] = "&eacute;";		entities["‘"] = "&euml;";		entities["“"] = "&igrave;";		entities["’"] = "&iacute;";		entities["”"] = "&icirc;";		entities["•"] = "&iuml;";		entities["Ý"] = "&eth;";		entities["–"] = "&ntilde;";		entities["˜"] = "&ograve;";		entities["—"] = "&oacute;";		entities["™"] = "&ocirc;";		entities["›"] = "&otilde;";		entities["š"] = "&ouml;";		entities["¿"] = "&oslash;";		entities["œ"] = "&uacute;";		entities["ž"] = "&ucirc;";		entities["Ÿ"] = "&uuml;";		entities["à"] = "&yacute;";		entities["ß"] = "&thorn;";		entities["Ø"] = "&yuml;";		entities["Œ"] = "&OElig;";		entities["œ"] = "&oelig;";		entities["Š"] = "&Scaron;";		entities["š"] = "&scaron;";		entities["Ÿ"] = "&Yuml;";		entities["ˆ"] = "&circ;";		entities["˜"] = "&tilde;";		entities["–"] = "&ndash;";		entities["—"] = "&mdash;";		entities["‘"] = "&lsquo;";		entities["’"] = "&rsquo;";		entities["‚"] = "&sbquo;";		entities["“"] = "&ldquo;";		entities["”"] = "&rdquo;";		entities["„"] = "&bdquo;";		entities["†"] = "&dagger;";		entities["‡"] = "&Dagger;";		entities["…"] = "&hellip;";		entities["‰"] = "&permil;";		entities["‹"] = "&lsaquo;";		entities["›"] = "&rsaquo;";		entities["€"] = "&euro;";		/**		 * Generate an A HREF tag.		 */		public static function a(href : String, text : String, styleClass : String = null) : String {			return '<a href="' + href + '"' + ((styleClass) ? ' class="' + styleClass + '"' : "") + ">" + text + "</a>";		}				/**		 * Generate an IMG tag.		 */		public static function img(src : String, alt : String = "image", width : int = 0, height : int = 0) : String {			return '<img src="' + src + '" alt="' + alt + '"' + ((width > 0) ? ' width="' + width.toString( ) + '"' : "") + ((height > 0) ? ' height="' + height.toString( ) + '"' : "") + '/>';		}				/**		 * Generate a SPAN tag.		 */		public static function span(text : String, styleClass : String = null) : String {			return styledTag( "span", text, styleClass );		}				/**		 * Generate a P tag.		 */		public static function p(text : String, styleClass : String = null) : String {			return styledTag( "p", text, styleClass );		}				/**		 * Generate a styled tag.		 */		protected static function styledTag(tagName : String, text : String, styleClass : String) : String {			return '<' + tagName + ((styleClass) ? ' class="' + styleClass + '"' : "") + '>' + text + '</' + tagName + '>';		}				/**		 * Inset a BR with optional newline.		 */		public static function br(addNewline : Boolean = false) : String {			return "<br/>" + (addNewline ? "\n" : "");		}		/**		 * HTMLCode Static Constructor		 */		public function HTMLCode() {			throw new Error( "HTMLCode is a static class and cannot be instantiated." );		}	}}