/** * sekati.display.BitmapDataCapture * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php *  * Some code adopted from LibSpark */package sekati.display {	import flash.display.BitmapData;	import flash.display.DisplayObject;	import flash.geom.Matrix;		/**	 * BitmapDataCapture provides a common interface for the capturing and BitmapData'ing of a DisplayObject.	 */	public class BitmapDataCapture extends BitmapData {		/**		 * Defines the maximum dimension of a BitmapData object in the Flash Player.		 */		public static const MAX_SIZE : int = 2880;		/**		 * BitmapDataCapture Constructor		 * @param src 			of the DisplayObject to capture.		 * @param scale 		to apply to the captured BitmapData.		 * @param transparent 	Specifies whether the bitmap supports per-pixel transparency. 		 * 						If <code>true</code> set the <code>fillColor</code> to <code>0x00000000</code> for a full transparent bitmap.		 * 						If <code>false</code> a minor improvement in rendering performance will result.		 * @param fillColor 	32-bit ARGB value to fill the bitmap area with.		 */		public function BitmapDataCapture(src : DisplayObject, scale : Number = 1, transparent : Boolean = false, fillColor : uint = 0xFFFFFFFF) {			super( src.width * scale, src.height * scale, transparent, fillColor );			this.draw( src, new Matrix( scale, 0, 0, scale, 0, 0 ) );		}	}}