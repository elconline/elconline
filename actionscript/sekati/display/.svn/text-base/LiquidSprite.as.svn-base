/** * sekati.display.LiquidSprite * @version 1.2.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.display {	import flash.events.Event;		import sekati.display.CoreSprite;	import sekati.display.StageDisplay;	import sekati.events.StageEvent;		/**	 * LiquidSprite provides a visual building block which is ready to respond to	 * <code>StageEvent</code>'s such as <code>RESIZE, RESIZE_COMPLETE, & FULLSCREEN</code>.	 * 	 * <p>Use LiquidClip for frame-based assets; else LiquidSprite is most appropriate.</p>	 * 	 * @see sekati.display.LiquidSprite	 */	public class LiquidSprite extends CoreSprite {		/**		 * LiquidSprite Constructor		 */		public function LiquidSprite() {			super( );		}		/**		 * @inheritDoc		 */		override protected function onStage(e : Event = null) : void {			StageDisplay.$.addEventListener( StageEvent.RESIZE, resize );			StageDisplay.$.addEventListener( StageEvent.RESIZE_COMPLETE, resizeComplete );			StageDisplay.$.addEventListener( StageEvent.FULLSCREEN, fullscreen );		}		/**		 * @inheritDoc		 */		override protected function offStage(e : Event = null) : void {			StageDisplay.$.removeEventListener( StageEvent.RESIZE, resize );			StageDisplay.$.removeEventListener( StageEvent.RESIZE_COMPLETE, resizeComplete );			StageDisplay.$.removeEventListener( StageEvent.FULLSCREEN, fullscreen );					}		/**		 * Fires when <code>StageDisplay</code> dispatches a <code>RESIZE</code> event.		 */		protected function resize(e : StageEvent = null) : void {		}		/**		 * Fires when <code>StageDisplay</code> dispatches a <code>RESIZE_COMPLETE</code> event.		 */		protected function resizeComplete(e : StageEvent = null) : void {		}		/**		 * Fires when <code>StageDisplay</code> dispatches a <code>FULLSCREEN</code> event.		 */		protected function fullscreen(e : StageEvent = null) : void {		}		/**		 * @inheritDoc		 */		override public function destroy() : void {		}		}}