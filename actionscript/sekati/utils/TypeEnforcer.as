/** * sekati.utils.TypeEnforcer * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.utils {	import flash.utils.getDefinitionByName;	import flash.utils.getQualifiedClassName;			/**	 * TypeEnforcer provides type helpers for class constructors.	 */	public class TypeEnforcer {		/**		 * Forcibly abstract a class instance from its abstract class (An abstract class has no direct instances, but has descendants with instances).		 * @throws Error if the instance is not properly abstracted.		 * @example <listing version="3.0">		 * 	TypeEnforcer.enforceAbstract(this, AbstractCalendar);		 * 	package {		 * 		public class AbstractExample {		 * 			public function AbstractExample( ) {		 * 				TypeEnforcer.enforceAbstract(this, AbstractExample);			 * 			}		 * 		}		 * 	}		 * </listing>		 */		public static function enforceAbstract(classInstance : *, classAbstract : Class) : void {			if( Class( getDefinitionByName( getQualifiedClassName( classInstance ) ) ) == classAbstract ) {				throw new Error( getQualifiedClassName( classInstance ) + ' is an Abstract Class which you must extend: it cannot be instantiated directly.' );			}		}		/**		 * Notify upon instantiation of class		 */		public static function enforceStatic(classInstance : *) : void {			throw new Error( getQualifiedClassName( classInstance ) + " is a static class and cannot be instantiated." );		}				/**		 * TypeEnforcer Static Constructor		 */		public function TypeEnforcer() {			enforceStatic( this );		}			}}