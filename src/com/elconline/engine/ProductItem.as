/** * com.mac.engine.ProductItem * @version 2.1.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package com.coresite.engine {	import flash.utils.Dictionary;	/**	 * ProductItem provides a read-only "Product Item" object which contains	 * base product properties and a collection of <code>ProductSku</code>'s which	 * contain information on individual Product Item makes & models.	 * 	 * <p>ProductItem's are generally contained within a <code>ProductCategory</code>	 * generated by a JSON RPC query to <code>ProductFactory</code>.</p>	 * 	 * @see com.mac.engine.ProductCategory	 */	 	public class ProductItem {		protected var _id : String;		protected var _name : String;		protected var _newField : String;		protected var _description : String;		protected var _imageName : String;		protected var _finishesByProduct : int;		protected var _defaultCategory : String;		protected var _sku : Dictionary;			/**		 * ProductItem Constructor		 */		public function ProductItem(id : String, name : String = null, newField:String = null, description : String = null, imageName : String = null, finishesByProduct : int = 0, defaultCategory : String = null, sku : Dictionary = null) {			_id = id;			_name = name;			_newField = newField;			_description = description;			_imageName = imageName;			_finishesByProduct = finishesByProduct;			_defaultCategory = defaultCategory;			_sku = sku;			//trace( "\n" + info );		}		/**		 * Construct and return the ProductItem Image URL		 * @param descriptor 	of the "type" of image being requested (usually the application name).		 */		public function getImageURL(size : String = '666x666') : String {			if (_imageName) {				return "/product/images/" + size + "/" + _imageName + ".jpg";			} else {				return null;				}					}				/**		 * The product string ID		 */		public function get id() : String {			return _id;			}		/**		 * The product name.		 */		public function get name() : String {			return _name;			}						/**		 * The new declarative name.		 */		public function get newField() : String {			return _newField;			}		/**		 * The product description.		 * 		 * <p>This field is used for HTMLText display in the GuideBrowser & ProductBrowser.</p>		 */		public function get description() : String {			return _description;		}			/**		 * The product image name.		 */		public function get imageName() : String {			return _imageName;			}		/**		 * The product finishes by product.		 */		public function get finishesByProduct() : int {			return _finishesByProduct;			}		/**		 * The products default category (for coremetrics tracking).		 */		public function get defaultCategory() : String {			return _defaultCategory;		}				/**		 * A dictionary containing all of the <code>ProductSku</code>'s 		 * contained in this ProductItem. Sku ID's are used as dictionary keys.		 */		public function get sku() : Dictionary {			return _sku;				}		/**		 * Return an introspective string of the <code>ProductItem</code> contents.		 */		public function get info() : String {			return "@@@ ProductItem => ID: " + id + ", NAME: " + name + ", DESCRIPTION: " + description + ", IMAGENAME: " + imageName + ", FINISHBYPRODUCT: " + finishesByProduct + ", DEFAULTCATEGORY: " + defaultCategory + ", SKU: " + sku + ", getImageURL(): " + getImageURL( );		}	}}