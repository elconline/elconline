/** * com.mac.engine.ProductSku * @version 2.1.2 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package com.coresite.engine {	/**	 * ProductSku provides a read-only "Product Sku" object which contains	 * detailed Product Item make & model propertie. <code>ProductSku</code>'s	 	 * exist exclusively in <code>ProductItem</code>'s.	 *  	 * @see com.mac.engine.ProductItem	 */	public class ProductSku {		protected var _key : String;		protected var _id : String;		protected var _hexValue : Array;		protected var _productPrice : Number;		protected var _productSize : String;				protected var _productCode : String;		protected var _upcCode : int;		protected var _imageBase : String;		protected var _smooshDesign : String;		protected var _description : String;		protected var _finish : String;		protected var _shadeName : String;		protected var _shadeDescription : String;												protected var _inventoryStatus : String;		/**		 * NEW FIELD		 * @param area_id array of id's (associated to the area strings in the guide browser xml)		 * @param product_type_id array of id's (associated to the fiber strings in the guide browser xml)		 * @param product_form_id array of id's (associated to the technique strings in the guide browser xml)		 * @param coverage_id array of id's (associated to the product type strings in the guide browser xml)		 * @param finish_id array of id's (associated to the product type strings in the guide browser xml)		 * @param undertone_id array of id's (associated to the product type strings in the guide browser xml)		 * @param use_id array of id's (associated to the product type strings in the guide browser xml)		 * @param use_with_id array of id's (associated to the product type strings in the guide browser xml)		 * @param fibre_id array of id's (associated to the product type strings in the guide browser xml)		 * @param benefit_id array of id's (associated to the product type strings in the guide browser xml)		 */		protected var _area_id : Array;			protected var _product_type_id : Array;			protected var _product_form_id : Array;			protected var _coverage_id : Array;			protected var _finish_id : Array;			protected var _undertone_id : Array;			protected var _use_id : Array;			protected var _use_with_id : Array;			protected var _fibre_id : Array;			/**		 * <code>intensity</code> denotes the product intensity value on a scale of 0 (white/no-color) to 50 (black/darkest-color).		 * The "Foundation Browser" instance of the Product Browser Application is contingent on this value existing and being valid.		 */					protected var _intensity : uint;			/**		 * default category replicated from the product level for tracking with core metrics.		 */		protected var _defaultCategory : String;		/**		 * ProductSku Constructor		 */		public function ProductSku(key : String, id : String, price : Number = 0, size : String = null, code : String = null, hex : Array = null, upc : int = 0, imageBase : String = null, 		smoosh : String = null, description : String = null, finish : String = null, shadeName : String = null, shadeDescription : String = null, inventoryStatus : String = null, 		areaID : Array = null, productTypeID : Array = null, productFormID : Array = null, coverageID : Array = null, finishID : Array = null, 		undertoneID : Array = null, useID : Array = null, useWithID : Array = null, fibreID : Array = null, intensityValue : uint = 0, defaultCategory : String = null) {			_key = key;			_id = id;			_productPrice = price;			_productSize = size;			_productCode = code;			_hexValue = hex;			_upcCode = upc;			_imageBase = imageBase;			_smooshDesign = smoosh;			_description = description;			_finish = finish;			_shadeName = shadeName;			_shadeDescription = shadeDescription;			_inventoryStatus = inventoryStatus;			// added			_area_id = areaID;			_product_type_id = productTypeID;			_product_form_id = productFormID;			_coverage_id = coverageID;			_finish_id = finishID;			_undertone_id = undertoneID;			_use_id = useID;			_use_with_id = useWithID;			_fibre_id = fibreID;			_intensity = intensityValue;			_defaultCategory = defaultCategory;			//trace( info );		}		/**		 * Construct and return the ProductSku Image URL (default size: 181x181)		 * @param descriptor 	of the "type" of image being requested (usually the application name).		 */		public function getImageURL(size : String = '666x666') : String {			if (_imageBase) {				return "/product/images/" + size + "/" + _productCode + ".jpg";			} else {				return null;				}		}		/**		 * Construct and return the ProductSku *SMOOSH* URL		 * @param size 		determines the smoosh size used (generally 56 or 168 for Product Browser).		 */		public function getSmooshURL(size : String = '56') : String {			return "/product/images/swatches/" + size + "x" + size + "/" + _smooshDesign + ".png";		}		/**		 * Return the value of the full path <code>_key</code>.		 * This is the fully qualified SKU (CAT000PRODYYYSKUZZZ).		 */		public function get key() : String {			return _key;		}		/**		 * Return the value of <code>_id</code>.		 */		public function get id() : String {			return _id;		}		/**		 * Return the value of <code>_productPrice</code>.		 */		public function get price() : Number {			return _productPrice;		}		/**		 * Return the value of <code>_productSize</code>.		 */		public function get size() : String {			return _productSize;		}		/**		 * Return the value of <code>_productCode</code>.		 */		public function get code() : String {			return _productCode;		}		/**		 * Return the value of <code>_hexValues</code>.		 */		public function get hex() : Array {			return _hexValue;				}		/**		 * Return the value of <code>_upcCode</code>.		 */		public function get upc() : int {			return _upcCode;		}		/**		 * Return the value of <code>_imageBase</code>.		 */		public function get imageBase() : String {			return _imageBase;		}		/**		 * Return the value of <code>_smooshDesign</code>.		 */		public function get smoosh() : String {			return _smooshDesign;		}		/**		 * Return the value of <code>_description</code>.		 */		public function get description() : String {			return _description;		}		/**		 * Return the value of <code>_finish</code>.		 */		public function get finish() : String {			return _finish;		}		/**		 * Return the value of <code>_shadeName</code>.		 */		public function get shadeName() : String {			return _shadeName;		}		/**		 * Return the value of <code>_shadeDescription</code>.		 */		public function get shadeDescription() : String {			return _shadeDescription;		}					/**		 * Return the value of <code>_inventoryStatus</code>.		 */		public function get inventoryStatus() : String {			return _inventoryStatus;		}		////////////////////////////////////////////////////////////////		// ADDED FIELDS - associate with XML				/**		 * Return the value of <code>_area_id</code>.		 */				public function get areaId() : Array {			return _area_id;		}		/**		 * Return the value of <code>_product_type_id</code>.		 */				public function get productTypeId() : Array {			return _product_type_id;		}		/**		 * Return the value of <code>_product_form_id</code>.		 */				public function get productFormId() : Array {			return _product_form_id;		}		/**		 * Return the value of <code>_coverage_id</code>.		 */				public function get coverageId() : Array {			return _coverage_id;		}		/**		 * Return the value of <code>_finish_id</code>.		 */				public function get finishId() : Array {			return _finish_id;		}		/**		 * Return the value of <code>_undertone_id</code>.		 */				public function get undertoneId() : Array {			return _undertone_id;		}		/**		 * Return the value of <code>_use_id</code>.		 */				public function get useId() : Array {			return _use_id;		}		/**		 * Return the value of <code>_use_with_id</code>.		 */				public function get useWithId() : Array {			return _use_with_id;		}		/**		 * Return the value of <code>_fibre_id</code>.		 */				public function get fibreId() : Array {			return _fibre_id;		}		/**		 * Return the value of </code>_intensity</code>		 */		public function get intensity() : int {			return _intensity;		}			/**		 * The products default category (for coremetrics tracking).		 */		public function get defaultCategory() : String {			return _defaultCategory;		}																										////////////////////////////////////////////////////////////////		/**		 * Return an introspective string of the <code>ProductItem</code> contents.		 */		public function get info() : String {			return "	*** ProductSku => KEY: " + key + ", ID: " + id + ", PRICE: " + price + ", SIZE: " + size + ", CODE: " + code + ", HEX: " + hex + ", UPC: " + upc + ", IMAGEBASE: " + imageBase + ", SMOOSH: " + smoosh + ", DESCRIPTION: " + description + ", FINISH: " + finish + ",\n AREA_ID: " + areaId + ", PRODUCT_TYPE_ID: " + productTypeId + ", PRODUCT_FORM_ID: " + productFormId + ", COVERAGE_ID: " + coverageId + ", FINISH_ID: " + finishId + ", UNDERTONE_ID: " + undertoneId + ", USE_ID: " + useId + ", USE_WITH_ID: " + useWithId + ", FIBRE_ID: " + fibreId + ", INTENSITY: " + intensity + ",\n getImageURL(): " + getImageURL( ) + ", getSmooshURL(): " + getSmooshURL( ) + " ...\n\n";		}		}}